@model IEnumerable<ProyectoInmobiliariaMVCPrimera_Entrega.Models.Pago>

@{
    ViewData["Title"] = "Listapago";
}

<div class="card bg-light border border-primary">
    <div class="card-header border-bottom border-primary bg-light">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">Crear pago</button>
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Pago</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <form class="needs-validation" novalidate asp-action="Create">
                            <div class="form-group">
                                <label for="num" class="control-label">Numero</label>
                                @if (ViewBag.pago == null)
                                {

                                    <input type="text" id="num" name="Numero" class="form-control" value="1" required readonly />
                                }
                                else
                                {
                                    int num = int.Parse(@ViewBag.Pago.Numero) + 1;

                                    <input type="text" id="num" name="Numero" class="form-control" value="@num" required readonly />

                                }
                                <div class="invalid-feedback">
                                    Ingrese Numero
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="date" class="control-label">Fecha</label>
                                <input type="date" id="date" name="Fecha" class="form-control" required />
                                <div class="invalid-feedback">
                                    Ingrese Fecha
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="imp" class="control-label">Importe</label>
                                <input type="number" id="imp" name="Importe" class="form-control" required />
                                <div class="invalid-feedback">
                                    Ingrese Importe
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Propiedad</label>
                                <input class="form-control" value="@ViewBag.Alquiler.inmueble.Direccion" readonly />
                                <input for="AlquilerId" class="form-control" name="id" type="hidden" value="@ViewBag.Alquiler.AlquilerId" />
                            </div>

                            <div class="form-group">
                                @{ string apenom = @ViewBag.Inquilino.Nombre + " " + @ViewBag.Inquilino.Apellido;
                                <label class="control-label">Inquilino</label>
                                <input class="form-control" value="@apenom" readonly />
                                }
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                <button type="submit" class="btn btn-primary">Crear</button>
                            </div>
                        </form>
                    </div>
                   
                </div>
            </div>
        </div>

    </div>

    <div class="card-body">
        <table class="table table-hover table-bordered w-100" id="dtHorizontalVertical">
            <thead class="table-danger">
                <tr>
                  
                    <th>
                        @Html.DisplayNameFor(model => model.Numero)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Fecha)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Importe)
                    </th>
                   
                   
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                       
                        <td>
                            @Html.DisplayFor(modelItem => item.Numero)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Fecha)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Importe)
                        </td>
                      
                        
                        <td class="d-flex justify-content-center">
                            <div class="btn-group" role="group">

                                <a asp-action="Edit" class="btn btn-primary disabled"><i class="fas fa-edit"></i></a>
                                <a asp-action="Delete" class=" btn btn-danger disabled"><i class="fas fa-minus-square"></i></a>

                            </div>


                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>